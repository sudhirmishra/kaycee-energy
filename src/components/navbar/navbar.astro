---
import Container from "@/components/container.astro";
import Link from "@/components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import mainLogo from "@/assets/main_logo.png";

const BASE_URL = import.meta.env.BASE_URL;

// Helper function to construct paths with the correct base URL
const getResolvedPath = (originalPath: string): string => {
  // BASE_URL is guaranteed to end with a slash (e.g., /kaycee-energy/ or /)
  // originalPath starts with a slash (e.g., /about or /)
  if (originalPath === "/") {
    // If originalPath is just "/", return BASE_URL (e.g., /kaycee-energy/ or / if no base)
    return BASE_URL;
  }
  // Concatenate BASE_URL (e.g., /kaycee-energy/) with the rest of originalPath (e.g., about)
  // Example: BASE_URL = /kaycee-energy/, originalPath = /investor -> /kaycee-energy/investor
  return BASE_URL + originalPath.substring(1);
};

const menuitems = [
  { title: "Home", path: "/" },
  {
    title: "Company",
    children: [
      { title: "About", path: "/company/about" },
      { title: "Our Team", path: "/company/our-team" },
    ],
  },
  { title: "Services", path: "/services" },
  { title: "Projects", path: "/projects" },
  { title: "News", path: "/news" },
  { title: "Contact", path: "/contact" },
  { title: "Investor", path: "/investor" },
];
---

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center my-5">
    <Astronav>
      <div class="flex w-full lg:w-auto items-center justify-between">
        <a href={getResolvedPath("/")} class="text-lg flex items-center gap-2">
          <img
            src={mainLogo.src}
            alt="Kay Cee Energy Logo"
            class="h-10 w-auto"
          />
          <span class="font-bold text-slate-800">Kay Cee Energy</span>
        </a>
        <div class="block lg:hidden">
          <MenuIcon class="w-4 h-4 text-gray-800" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
        <ul class="flex flex-col lg:flex-row lg:gap-3">
          {
            menuitems.map((item, index) => (
              <>
                {item.children && (
                  <Dropdown
                    title={item.title}
                    children={item.children} // Pass original children; Dropdown.astro will also need getResolvedPath
                    lastItem={index === menuitems.length - 1}
                  />
                )}

                {!item.children && (
                  <li>
                    <a
                      href={getResolvedPath(item.path)}
                      class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900">
                      <span> {item.title}</span>
                      {item.badge && (
                        <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                          New
                        </span>
                      )}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>
      </MenuItems>
    </Astronav>
  </header>
</Container>
